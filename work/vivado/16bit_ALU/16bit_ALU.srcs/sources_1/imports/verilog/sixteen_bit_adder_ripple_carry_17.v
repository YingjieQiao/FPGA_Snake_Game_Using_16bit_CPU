/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module sixteen_bit_adder_ripple_carry_17 (
    input [15:0] x,
    input [15:0] y,
    input [0:0] alufn,
    output reg cout,
    output reg [15:0] s
  );
  
  
  
  wire [(5'h10+0)-1:0] M_fullAdder_s;
  wire [(5'h10+0)-1:0] M_fullAdder_cout;
  reg [(5'h10+0)-1:0] M_fullAdder_cin;
  reg [(5'h10+0)-1:0] M_fullAdder_x;
  reg [(5'h10+0)-1:0] M_fullAdder_y;
  
  genvar GEN_fullAdder0;
  generate
  for (GEN_fullAdder0=0;GEN_fullAdder0<5'h10;GEN_fullAdder0=GEN_fullAdder0+1) begin: fullAdder_gen_0
    full_adder_18 fullAdder (
      .cin(M_fullAdder_cin[GEN_fullAdder0*(1)+(1)-1-:(1)]),
      .x(M_fullAdder_x[GEN_fullAdder0*(1)+(1)-1-:(1)]),
      .y(M_fullAdder_y[GEN_fullAdder0*(1)+(1)-1-:(1)]),
      .s(M_fullAdder_s[GEN_fullAdder0*(1)+(1)-1-:(1)]),
      .cout(M_fullAdder_cout[GEN_fullAdder0*(1)+(1)-1-:(1)])
    );
  end
  endgenerate
  
  reg [15:0] xb;
  
  always @* begin
    xb = y;
    if (alufn[0+0-:1]) begin
      xb = ~y;
    end
    M_fullAdder_cin[0+0-:1] = alufn[0+0-:1];
    M_fullAdder_x = x;
    M_fullAdder_y = xb;
    s = M_fullAdder_s;
    cout = M_fullAdder_cout[2+0-:1];
    M_fullAdder_cin[1+14-:15] = M_fullAdder_cout[0+14-:15];
  end
endmodule
